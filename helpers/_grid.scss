// Default Breakpoints
// ===================
// These are fairly meaningless default settings.
// Feel free to reset these variables
// to fit the needs of your specific project.

$small: new-breakpoint(min-width 460px max-width 810px);
$medium: new-breakpoint(min-width 811px max-width 1080px);
$large: new-breakpoint(min-width 1081px);

$default-desktop: new-breakpoint(min-width 768px);
$default-mobile: new-breakpoint(max-width 480px);

// To override Bourbon's max-width
// for the outer-container
$max-width: 1081px;

%container,
.container {
  @include outer-container;
}

%content-block,
.content-block {
  @include pad(0 10px);
}

/* Grid Mixins */
/* =========== */

// Clearfix
// --------
// Ensure elements don't accidentally overlap.
@mixin clearfix {
  &:after {
   visibility: hidden;
   display: block;
   font-size: 0;
   content: " ";
   clear: both;
   height: 0;
 }
}

// Omega-Reset
// -----------
// To change the omega # at various breakpoints
// More info: http://www.joshfry.me/blog/2013/05/13/omega-reset-for-bourbon-neat/
@mixin omega-reset($nth) {
  &:nth-child(#{$nth}) { margin-right: flex-gutter($grid-columns, $gutter); }
  &:nth-child(#{$nth}+1) { clear: none }
}

// Features-Layout
// ---------------
// To add white-space around prose for feature projects
@mixin features-layout ($bp) {
  @include span-columns(12);
  @include media($bp) {
    @include span-columns(10 of 12);
    @include shift(1);
  }
}

@mixin list-grid ($bp, $col-width, $number-li) {
  // Creates a grid for list items at single breakpoint
  // $bp = breakpoint
  // $col-width = the number of span-columns in your grid
  // $number-li = the number of list items

  ul {
    @include span-columns($col-width);
    @include pad(0);

    li {
      @include span-columns($col-width of $col-width);
      @include media($bp) {
        @include span-columns($col-width / $number-li of $col-width);
        @include omega($number-li+n);
      }
    }
  }
}

@mixin div-grid ($bp, $col-width, $number-div) {
  // Create a div grid with single breakpoint
  // $bp = breakpoint
  // $col-width = the number of span-columns in your grid
  // $number-div = the number of divs

  @include media($bp) {
    div {
      @include span-columns($col-width / $number-div of $col-width);
      @include omega($number-div+n);
    }
  }
}

// Mobile vs. Desktop Mixins
// =========================

@mixin hide($bp) {
  @include media($bp) {
    display: none;
  }
}

@mixin mobile-only {
  display: block;

  @include media($small) {
    display: none;
  }

  @include media($medium) {
    display: none;
  }

  @include media($large) {
    display: none;
  }
}

@mixin desktop-only {
  display: none;

  @include media($small) {
    display: block;
  }

  @include media($medium) {
    display: block;
  }

  @include media($large) {
    display: block;
  }
}

@mixin desktop-hide {
  display: block;

  @include media($small) {
    display: block;
  }

  @include media($medium) {
    display: none;
  }

  @include media($large) {
    display: none;
  }
}

@mixin mobile-hide {
  @include clearfix;
  display: none;

  @include media($small) {
    display: none;
  }

  @include media($medium) {
    display: block;
  }

  @include media($large) {
    display: block;
  }
}
